var holder;
(function() {
    var http = require('http');
    var queryString = require('querystring');
    var clientSecret = require('./auth').getClientSecret();

    holder = {

        buildOptions : function buildOptions() {
            return {
                host : 'api.renren.com',
                port : 80,
                path : '/restserver.do',
                method : 'POST',
                headers : {
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                }
            };
        },

        prepareReqData : function (token, status) {
            var postData = {
                v : '1.0',
                method : "status.set",
                status :  status,
                format : 'JSON',
                'access_token' : token
            };

            postData.sig = holder.calSig(postData);
            return queryString.stringify(postData);
        },

        buildObjectStrAsc : function(postData, joiner) {
            joiner = joiner || '';
            var params = [];
            for (k in postData) {
                params.push('' + k + '=' + postData[k]);
            }
            params.sort();
            return params.join(joiner);
        },

        calSig : function(postData) {
            var base = holder.buildObjectStrAsc(postData) + clientSecret;

            return require('crypto').createHash('md5').update(base, 'utf8').digest('hex');
        },


        update : function(token, status, successCallback) {
            var options = holder.buildOptions();
            var requestData = holder.prepareReqData(token, status);

            options.headers['Content-Length'] = requestData.length;

            var req = http.request(options, function(res) {
                res.setEncoding('utf8');
                var resData = '';

                res.on('data', function(chunk) {
                    resData += chunk;
                });
                res.on('end', function() {
                    var d = JSON.parse(resData);
                    if (d.result == 1) {
                        console.log('status successfully updated.');
                        if (successCallback) {
                            successCallback(resData);
                        }
                    } else {
                        console.log(resData);
                    }
                });
                res.on('error', function(e) {
                    console.log('error occur:' + e.message);
                });

            });

            req.on('error', function(e) {
                console.log('error occur:' + e.message);
            });

            req.write(requestData);
            req.end();
        }


    };
})();

module.exports.update = holder.update;