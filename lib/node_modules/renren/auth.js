var env = require('env');

var http = require('http');

var holder = {
    clientId : env['renrenClientId'],
    clientSecret : env['renrenClientSecret'],
    tokenGrantedRedirectUri : 'http://' + env.appHostName + '/renren/authCode.go',

    createOptions : function () {
        return {
            host : 'graph.renren.com',
            port : 80,
            path : '/oauth/token',
            method : 'POST',
            headers : {
                'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8'
            }
        };
    },

    requestToken : function(code, successfulCallback) {

        var options = holder.createOptions();

        var requestBody = holder.createRequestBody(code);
        options.headers['Content-Length'] = requestBody.length;

        var req = http.request(options, function(resp) {
            var respData = '';
            resp.on('data', function(chunk) {
                respData += chunk;
            })
                    .on('end', function() {
                        successfulCallback(respData);
                    })
                    .on('error', function(e) {
                        throw new Error('error occur when requesting token from renren:' + e.message);
                    });
        });
        req.write(requestBody);

        req.end();
    },

    createRequestBody : function(code) {
        var str = '';
        str += 'grant_type=authorization_code&'
                + 'code=' + code
                + '&client_id=' + holder.clientId
                + '&client_secret=' + holder.clientSecret
                + '&redirect_uri=' + holder.tokenGrantedRedirectUri;
        return str;
    }

};
module.exports.requestToken = holder.requestToken;

module.exports.getClientSecret = function() {
    return holder.clientSecret;
};